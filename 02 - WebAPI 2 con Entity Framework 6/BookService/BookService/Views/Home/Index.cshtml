@*<div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>
    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
            a broad range of clients, including browsers and mobile devices. ASP.NET Web API
            is an ideal platform for building RESTful applications on the .NET Framework.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301872">Learn more &raquo;</a></p>
        </div>
    </div>*@


@*definir el código HTML de la aplicación y Agregar enlace de datos entre el código HTML y el modelo de vista.*@
@*Los elementos importantes son aquellas con data-bind atributos. Este atributo vincula el código HTML para el modelo de vista.*@


@section scripts {
    @Scripts.Render("~/bundles/app")
}

<div class="page-header">
    <h1>BookService</h1>
</div>

<div class="row">

    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 class="panel-title">Books</h2>
            </div>
            <div class="panel-body">
                @*El foreach enlace indica a Knockout que recorra en iteración el contenido de la books matriz. Para cada elemento de la matriz, Knockout crea un nuevo <li>
                    elemento. Los enlaces dentro del contexto de la foreach hacen referencia a propiedades en el elemento de matriz.*@
                    <ul class="list-unstyled" data-bind="foreach: books">
                        <li>
                            @* el databind se actualiza cuando cambia el dato. Idem para error *@
                            <strong><span data-bind="text: AuthorName"></span></strong>: <span data-bind="text: Title"></span>
                            <small><a href="#" data-bind="click: $parent.getBookDetail">Details</a></small>
                            @*<small><a href="#">Details</a></small>*@
                        </li>
                    </ul>
            </div>
        </div>
        @*Cada vez que se asigna un nuevo valor a error, Knockout actualiza el texto en el elemento p .*@
        <div class="alert alert-danger" data-bind="visible: error"><p data-bind="text: error"></p></div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <!-- TODO: Book details -->
            @*El "!--ko-- " sintaxis permite incluir un enlace de Knockout fuera de un elemento de DOM.
            En este caso, el if enlace hace que esta sección de marcado que se mostrará solo cuando details es distinto de null.*@

            <!-- ko if:detail() -->

            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">Detail</h2>
                    </div>

                    <table class="table">
                        <tr><td>Author</td><td data-bind="text: detail().AuthorName"></td></tr>
                        <tr><td>Title</td><td data-bind="text: detail().Title"></td></tr>
                        <tr><td>Year</td><td data-bind="text: detail().Year"></td></tr>
                        <tr><td>Genre</td><td data-bind="text: detail().Genre"></td></tr>
                        <tr><td>Price</td><td data-bind="text: detail().Price"></td></tr>
                    </table>

                </div>
            </div>

            <!-- /ko -->

        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <!-- TODO: Add new book -->
            @* Este marcado crea un formulario para enviar a un nuevo autor.
            Los valores de la lista desplegable de autor son datos enlazados a la authors perceptible en el modelo de vista.
            Para las entradas de formulario, los valores están enlazados a datos a la newBook propiedad del modelo de vista. *@

            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">Add Book</h2>
                    </div>

                    <div class="panel-body">
                        <form class="form-horizontal" data-bind="submit: addBook">
                            <div class="form-group">
                                <label for="inputAuthor" class="col-sm-2 control-label">Author</label>
                                <div class="col-sm-10">
                                    <select data-bind="options:authors, optionsText: 'Name', value: newBook.Author"></select>
                                </div>
                            </div>

                            <div class="form-group" data-bind="with: newBook">
                                <label for="inputTitle" class="col-sm-2 control-label">Title</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="inputTitle" data-bind="value:Title" />
                                </div>

                                <label for="inputYear" class="col-sm-2 control-label">Year</label>
                                <div class="col-sm-10">
                                    <input type="number" class="form-control" id="inputYear" data-bind="value:Year" />
                                </div>

                                <label for="inputGenre" class="col-sm-2 control-label">Genre</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="inputGenre" data-bind="value:Genre" />
                                </div>

                                <label for="inputPrice" class="col-sm-2 control-label">Price</label>
                                <div class="col-sm-10">
                                    <input type="number" step="any" class="form-control" id="inputPrice" data-bind="value:Price" />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-default">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>